buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        maven { url = 'https://maven.parchmentmc.org' }
        flatDir { dirs 'externalmods' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
        classpath 'org.spongepowered:mixingradle:0.7.+'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: "eclipse"
apply plugin: 'maven-publish'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

group = 'biospartan'
version = '1.0.0-beta-v1'

java {
    archivesBaseName = 'biospartan'
    toolchain.languageVersion = JavaLanguageVersion.of(8)
}

minecraft {
    mappings channel: 'parchment', version: "2021.10.17-1.16.5"

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')


            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                biospartan {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                biospartan {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'biospartan', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                biospartan {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "biospartan.refmap.json"

    config "biospartan.mixins.json"
}

// Include resources generated by data generators.
sourceSets {
    main.resources.srcDirs 'src/generated/resources'
}

repositories {
    flatDir {
        dirs 'externalmods'
    }
    maven {
        name = "CurseForge"
        url = "https://www.cursemaven.com"
    }
    maven {
        name = "GeckoLib"
        url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
    }
    maven {
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        url 'https://maven.blamejared.com'
    }
    maven {
        url = "https://maven.theillusivec4.top/"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.30'

    //Bioplethora
    implementation fg.deobf("ignore:bioplethora:1.16.5-1.0.0-beta-v5.4")

    //Spartan Weaponry
    compileOnly fg.deobf("curse.maven:spartan_weaponry-278141:3725538")
    runtimeOnly fg.deobf("curse.maven:spartan_weaponry-278141:3725538")

    //Geckolib
    implementation fg.deobf("software.bernie.geckolib:geckolib-forge-1.16.5:3.0.57")

    //Patchouli
    compileOnly fg.deobf("vazkii.patchouli:Patchouli:1.16.4-51:api")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:1.16.4-51")

    //The One Probe
    implementation fg.deobf("curse.maven:the-one-probe-245211:3319255")

    //Curios
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.16.5-4.0.5.3")
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.16.5-4.0.5.3:api")

    /*
    //FTB Chunks
    implementation fg.deobf("curse.maven:ftb-chunks-forge-314906:3603374")
    //Architectury API
    implementation fg.deobf("curse.maven:architectury-forge-419699:3705903")
    //FTB Library
    implementation fg.deobf("curse.maven:ftb-library-forge-404465:3553840")
    //FTB Teams
    implementation fg.deobf("curse.maven:ftb-teams-forge-404468:3535953")

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
     */
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "biospartan",
                //"Specification-Vendor": "biospartan authors",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                //"Implementation-Vendor": "biospartan authors",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')
